// <auto-generated />
using System;
using LR2_Malyshok.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LR2_Malyshok.Migrations
{
    [DbContext(typeof(TendersDataContext))]
    partial class TendersDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LR2_Malyshok.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("CompanyRating")
                        .HasColumnType("real");

                    b.HasKey("CompanyId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("LR2_Malyshok.Models.Tender", b =>
                {
                    b.Property<int>("TenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderId"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<float>("TenderBudget")
                        .HasColumnType("real");

                    b.Property<DateTime>("TenderEnd")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TenderStart")
                        .HasColumnType("datetime2");

                    b.HasKey("TenderId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Tender");
                });

            modelBuilder.Entity("LR2_Malyshok.Models.Tendering", b =>
                {
                    b.Property<int>("TenderingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderingId"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<float>("CurrentBid")
                        .HasColumnType("real");

                    b.Property<int>("TenderId")
                        .HasColumnType("int");

                    b.HasKey("TenderingId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("TenderId");

                    b.ToTable("Tendering");
                });

            modelBuilder.Entity("LR2_Malyshok.Models.Tender", b =>
                {
                    b.HasOne("LR2_Malyshok.Models.Company", null)
                        .WithMany("CompanyTenders")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("LR2_Malyshok.Models.Tendering", b =>
                {
                    b.HasOne("LR2_Malyshok.Models.Company", null)
                        .WithMany("CompanyTenderings")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LR2_Malyshok.Models.Tender", null)
                        .WithMany("Tenderings")
                        .HasForeignKey("TenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LR2_Malyshok.Models.Company", b =>
                {
                    b.Navigation("CompanyTenderings");

                    b.Navigation("CompanyTenders");
                });

            modelBuilder.Entity("LR2_Malyshok.Models.Tender", b =>
                {
                    b.Navigation("Tenderings");
                });
#pragma warning restore 612, 618
        }
    }
}
